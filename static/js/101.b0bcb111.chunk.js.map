{"version":3,"file":"static/js/101.b0bcb111.chunk.js","mappings":"0OAEO,MAAMA,EAAmBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qMAW7BC,EAAgBJ,EAAAA,EAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qH,cCFrC,MAwGA,EAxGgBI,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CACrCC,KAAM,GACNC,eAAgB,GAChBC,WAAY,GACZC,WAAY,MAEPC,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,OAChDO,EAAaC,IAAkBR,EAAAA,EAAAA,WAAS,IAE/CS,EAAAA,EAAAA,YAAU,KACRhB,GAASiB,EAAAA,EAAAA,KAAY,GACpB,CAACjB,KAEJgB,EAAAA,EAAAA,YAAU,KACR,GAAIF,EACF,GACET,EAAQG,MACRH,EAAQI,eAAeS,OAAS,GAChCb,EAAQK,YACRL,EAAQM,WACR,CACA,MAAMC,EAAkBV,EAAQiB,QAAQC,KAClCf,EAAQG,MAAQY,EAAOZ,OAASH,EAAQG,KAAKa,WAI/ChB,EAAQI,eAAeS,OAAS,IAC/Bb,EAAQI,eAAea,MACrBC,GACCA,EAASF,QAAUD,EAAOI,YAAYC,QAAQ,IAAK,WAKrDpB,EAAQK,YAAcU,EAAOM,QAAUrB,EAAQK,eAG/CL,EAAQM,YAAcS,EAAOM,QAAUrB,EAAQM,gBAKrDE,EAAmBD,EACrB,MACEC,EAAmB,GAEvB,GACC,CAACR,EAASH,EAASY,IAEtB,MAAMa,EAAQ,IAAI,IAAIC,IAAI1B,EAAQ2B,KAAKT,GAAWA,EAAOZ,SACnDsB,EAAS,IACV,IAAIF,IAAI1B,EAAQ2B,KAAKT,GAAWA,EAAOI,YAAYC,QAAQ,IAAK,QAE/DC,EAAU,IAAI,IAAIE,IAAI1B,EAAQ2B,KAAKT,GAAWA,EAAOM,YACrDhB,EAAaqB,KAAKC,OAAON,GACzBf,EAAaoB,KAAKE,OAAOP,GAY/B,OACEQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAC3C,EAAgB,CAAA6C,SAAA,EACfC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTX,MAAOA,EACPG,OAAQA,EACRpB,WAAYA,EACZC,WAAYA,EACZ4B,eAAiBC,IACflC,EAAWkC,GACXzB,GAAe,EAAK,EAEtBV,QAASA,EACToC,aAvBiBC,KACvBpC,EAAW,CACTE,KAAM,GACNC,eAAgB,GAChBC,WAAY,GACZC,WAAY,KAEdI,GAAe,EAAM,IAkBhBD,EACqB,OAApBF,GAA4BA,EAAgBM,OAAS,GACnDmB,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAAC/B,gBAAiBA,KAE7ByB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACzC,EAAa,CAAAwC,SAAC,yBAInBC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAAS1C,QAGzBmC,EAAAA,EAAAA,KAACQ,EAAAA,GAAc,KACfR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,MACN,C","sources":["pages/Catalog/Catalog.styled.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const CatalogContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  max-width: 1184px;\r\n  margin: 0 auto;\r\n  margin-bottom: 50px;\r\n  min-height: 65vh;\r\n`;\r\n\r\nexport const ResultMessage = styled.p`\r\n  margin-top: 50px;\r\n  font-size: 24px;\r\n  font-family: ManropeRegular;\r\n  color: rgba(138, 138, 137, 1);\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCars } from \"../../redux/adverts/selectors\";\r\nimport { fetchCars } from \"../../redux/adverts/operation\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport AdvertList from \"../../components/AdvertList/AdvertList\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport FilterForm from \"../../components/FilterForm/FilterForm\";\r\n\r\nimport { CatalogContainer, ResultMessage } from \"./Catalog.styled\";\r\n\r\nconst Catalog = () => {\r\n  const dispatch = useDispatch();\r\n  const allCars = useSelector(getCars);\r\n\r\n  const [filters, setFilters] = useState({\r\n    make: \"\",\r\n    filteredPrices: [],\r\n    minMileage: \"\",\r\n    maxMileage: \"\",\r\n  });\r\n  const [filteredAdverts, setFilteredAdverts] = useState(null);\r\n  const [isFiltering, setIsFiltering] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCars());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isFiltering) {\r\n      if (\r\n        filters.make ||\r\n        filters.filteredPrices.length > 0 ||\r\n        filters.minMileage ||\r\n        filters.maxMileage\r\n      ) {\r\n        const filteredAdverts = allCars.filter((advert) => {\r\n          if (filters.make && advert.make !== filters.make.value) {\r\n            return false;\r\n          }\r\n          if (\r\n            filters.filteredPrices.length > 0 &&\r\n            !filters.filteredPrices.some(\r\n              (priceObj) =>\r\n                priceObj.value === advert.rentalPrice.replace(\"$\", \"\")\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n          if (filters.minMileage && advert.mileage < filters.minMileage) {\r\n            return false;\r\n          }\r\n          if (filters.maxMileage && advert.mileage > filters.maxMileage) {\r\n            return false;\r\n          }\r\n          return true;\r\n        });\r\n        setFilteredAdverts(filteredAdverts);\r\n      } else {\r\n        setFilteredAdverts([]);\r\n      }\r\n    }\r\n  }, [filters, allCars, isFiltering]);\r\n\r\n  const makes = [...new Set(allCars.map((advert) => advert.make))];\r\n  const prices = [\r\n    ...new Set(allCars.map((advert) => advert.rentalPrice.replace(\"$\", \"\"))),\r\n  ];\r\n  const mileage = [...new Set(allCars.map((advert) => advert.mileage))];\r\n  const minMileage = Math.min(...mileage);\r\n  const maxMileage = Math.max(...mileage);\r\n\r\n  const handleResetClick = () => {\r\n    setFilters({\r\n      make: \"\",\r\n      filteredPrices: [],\r\n      minMileage: \"\",\r\n      maxMileage: \"\",\r\n    });\r\n    setIsFiltering(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CatalogContainer>\r\n        <FilterForm\r\n          makes={makes}\r\n          prices={prices}\r\n          minMileage={minMileage}\r\n          maxMileage={maxMileage}\r\n          onFilterChange={(newFilters) => {\r\n            setFilters(newFilters);\r\n            setIsFiltering(true);\r\n          }}\r\n          filters={filters}\r\n          onResetClick={handleResetClick}\r\n        />\r\n        {isFiltering ? (\r\n          filteredAdverts !== null && filteredAdverts.length > 0 ? (\r\n            <AdvertList filteredAdverts={filteredAdverts} />\r\n          ) : (\r\n            <>\r\n              <ResultMessage>No matches found.</ResultMessage>\r\n            </>\r\n          )\r\n        ) : (\r\n          <AdvertList adverts={allCars} />\r\n        )}\r\n      </CatalogContainer>\r\n      <ToastContainer />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n"],"names":["CatalogContainer","styled","div","_templateObject","_taggedTemplateLiteral","ResultMessage","p","_templateObject2","Catalog","dispatch","useDispatch","allCars","useSelector","getCars","filters","setFilters","useState","make","filteredPrices","minMileage","maxMileage","filteredAdverts","setFilteredAdverts","isFiltering","setIsFiltering","useEffect","fetchCars","length","filter","advert","value","some","priceObj","rentalPrice","replace","mileage","makes","Set","map","prices","Math","min","max","_jsxs","_Fragment","children","_jsx","FilterForm","onFilterChange","newFilters","onResetClick","handleResetClick","AdvertList","adverts","ToastContainer","Footer"],"sourceRoot":""}